
D:\facultate\rmt\rmt\examples\equivalence-new-examples-generic>D:\VstdProj\rmt\Release\rmt.exe -v 0  fun-loop-interchange_attempt.rmt 
INF Got verbosity level 0.
Proving simulation circularity #1
Proving simulation circularity (pair (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done) ENV3) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (band true (band (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (mequals (lookup ENV3 11) (lookup ENV4 11))) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (mequals (lookup ENV3 2) (lookup ENV4 2))))) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))
    + prove forall left (pair (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done) ENV3) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (band true (band (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (mequals (lookup ENV3 11) (lookup ENV4 11))) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (mequals (lookup ENV3 2) (lookup ENV4 2))))) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))
        + prove forall left (pair (P (push (seq (assign (var 1) 0) (assign (var 3) 0)) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done)) ENV3) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
            + prove forall left (pair (P (push (assign (var 1) 0) (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done))) ENV3) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                + prove forall left (pair (P (push 0 (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done))) (update ENV3 1 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                    + prove forall left (pair (P (push (seq 0 (assign (var 3) 0)) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done)) (update ENV3 1 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                        + prove forall left (pair (P (push (assign (var 3) 0) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done)) (update ENV3 1 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                            + prove forall left (pair (P (push 0 (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                + prove forall left (pair (P (push (seq 0 (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                    + prove forall left (pair (P (push (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                        + prove forall left (pair (P (push (less (var 1) (var 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                            + prove forall left (pair (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                + prove forall left (pair (P (push 0 (push (less |_| (var 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                    + prove forall left (pair (P (push (less 0 (var 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                        + prove forall left (pair (P (push (var 2) (push (less 0 |_|) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                            + prove forall left (pair (P (push (lookup ENV3 2) (push (less 0 |_|) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                                + prove forall left (pair (P (push (less 0 (lookup ENV3 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                                    + prove forall left (pair (P (push (bnot (mle (lookup ENV3 2) 0)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                                        + prove forall left (pair (P (push (ite (bnot (mle (lookup ENV3 2) 0)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                                            + prove forall left (pair (P (push (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                + prove forall left (pair (P (push (ite (less (var 3) (var 4)) (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                    + prove forall left (pair (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                        + prove forall left (pair (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                            + prove forall left (pair (P (push 0 (push (less |_| (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                + prove forall left (pair (P (push (less 0 (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                    + prove forall left (pair (P (push (var 4) (push (less 0 |_|) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                        + prove forall left (pair (P (push (lookup ENV3 4) (push (less 0 |_|) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                            + prove forall left (pair (P (push (less 0 (lookup ENV3 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                                + prove forall left (pair (P (push (bnot (mle (lookup ENV3 4) 0)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                                    + prove forall left (pair (P (push (ite (bnot (mle (lookup ENV3 4) 0)) (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                                        + prove forall left (pair (P (push (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                            + prove forall left (pair (P (push (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                + prove forall left (pair (P (push (assign (var 1) 0) (push (seq |_| (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                    + prove forall left (pair (P (push 0 (push (seq |_| (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                        + prove forall left (pair (P (push (seq 0 (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                            + prove forall left (pair (P (push (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                + prove forall left (pair (P (push (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                    + prove forall left (pair (P (push (ite (less (var 1) (var 2)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                        + prove forall left (pair (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                            + prove forall left (pair (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                + prove forall left (pair (P (push 0 (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                    + prove forall left (pair (P (push (less 0 (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                        + prove forall left (pair (P (push (var 2) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                            + prove forall left (pair (P (push (lookup ENV3 2) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                + prove forall left (pair (P (push (less 0 (lookup ENV3 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                    + prove forall left (pair (P (push (bnot (mle (lookup ENV3 2) 0)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                        + prove forall left (pair (P (push (ite (bnot (mle (lookup ENV3 2) 0)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                            + prove forall left (pair (P (push (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                + prove forall left (pair (P (push (seq S1 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                    + prove forall left (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (assign (var 1) 0) (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (assign (var 1) 0) (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done))) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done))) (update ENV4 1 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq 0 (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) (update ENV4 1 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (assign (var 3) 0) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) (update ENV4 1 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq 0 (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (less (var 3) (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (less |_| (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (var 4) (push (less 0 |_|) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (lookup ENV4 4) (push (less 0 |_|) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (lookup ENV4 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (bnot (mle (lookup ENV4 4) 0)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (ite (bnot (mle (lookup ENV4 4) 0)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (ite (less (var 1) (var 2)) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (var 2) (push (less 0 |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (lookup ENV4 2) (push (less 0 |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (lookup ENV4 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (bnot (mle (lookup ENV4 2) 0)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (ite (bnot (mle (lookup ENV4 2) 0)) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (assign (var 3) 0) (push (seq |_| (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (seq |_| (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq 0 (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (ite (less (var 3) (var 4)) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (var 4) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (lookup ENV4 4) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (lookup ENV4 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (bnot (mle (lookup ENV4 4) 0)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (ite (bnot (mle (lookup ENV4 4) 0)) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq S1 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                                                            Trying to prove base case: (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                                                                                                                                                                                                                            Instance of base only when false
                                                                                                                                                                                                                                                                                                                                                                                                            Proof succeeded: reached a circularity.
                                                                                                                                                                                                                                                                                                                                                                                                        - proof successful exists right (no unsolved cases) false
                                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                    - proof succeeded forall left (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                                - proof succeeded forall left (pair (P (push (seq S1 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                            - proof succeeded forall left (pair (P (push (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                        - proof succeeded forall left (pair (P (push (ite (bnot (mle (lookup ENV3 2) 0)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                    - proof succeeded forall left (pair (P (push (bnot (mle (lookup ENV3 2) 0)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                                - proof succeeded forall left (pair (P (push (less 0 (lookup ENV3 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                            - proof succeeded forall left (pair (P (push (lookup ENV3 2) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                        - proof succeeded forall left (pair (P (push (var 2) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                    - proof succeeded forall left (pair (P (push (less 0 (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                                - proof succeeded forall left (pair (P (push 0 (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                            - proof succeeded forall left (pair (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                        - proof succeeded forall left (pair (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                    - proof succeeded forall left (pair (P (push (ite (less (var 1) (var 2)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                                - proof succeeded forall left (pair (P (push (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                            - proof succeeded forall left (pair (P (push (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                        - proof succeeded forall left (pair (P (push (seq 0 (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                    - proof succeeded forall left (pair (P (push 0 (push (seq |_| (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                                - proof succeeded forall left (pair (P (push (assign (var 1) 0) (push (seq |_| (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                            - proof succeeded forall left (pair (P (push (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                        - proof succeeded forall left (pair (P (push (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) 0)) (bnot (mle (lookup ENV3 4) 0)))))))))
                                                                                                                        + prove forall left (pair (P (push skip done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                            + prove forall left (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq (assign (var 1) 0) (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (assign (var 1) 0) (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done))) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done))) (update ENV4 1 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq 0 (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) (update ENV4 1 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (assign (var 3) 0) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) (update ENV4 1 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq 0 (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (less (var 3) (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (less |_| (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (var 4) (push (less 0 |_|) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (lookup ENV4 4) (push (less 0 |_|) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (lookup ENV4 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (bnot (mle (lookup ENV4 4) 0)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (ite (bnot (mle (lookup ENV4 4) 0)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push skip done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                                                Trying to prove base case: (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                                                                                                                Proof succeeded: reached based equivalence.
                                                                                                                                                                                                            - proof successful exists right (no unsolved cases) false
                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                - proof was successful for exists right
                                                                                                                                            - proof was successful for exists right
                                                                                                                                        - proof was successful for exists right
                                                                                                                                    - proof was successful for exists right
                                                                                                                                - proof was successful for exists right
                                                                                                                            - proof succeeded forall left (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                        - proof succeeded forall left (pair (P (push skip done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (bnot (mle (lookup ENV3 2) 0)) (mle (lookup ENV3 4) 0)))))))
                                                                                                                    - proof succeeded forall left (pair (P (push (ite (bnot (mle (lookup ENV3 4) 0)) (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                                - proof succeeded forall left (pair (P (push (bnot (mle (lookup ENV3 4) 0)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                            - proof succeeded forall left (pair (P (push (less 0 (lookup ENV3 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                        - proof succeeded forall left (pair (P (push (lookup ENV3 4) (push (less 0 |_|) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                    - proof succeeded forall left (pair (P (push (var 4) (push (less 0 |_|) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                                - proof succeeded forall left (pair (P (push (less 0 (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                            - proof succeeded forall left (pair (P (push 0 (push (less |_| (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                        - proof succeeded forall left (pair (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                    - proof succeeded forall left (pair (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                                - proof succeeded forall left (pair (P (push (ite (less (var 3) (var 4)) (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                            - proof succeeded forall left (pair (P (push (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) 0))))))))
                                                                            + prove forall left (pair (P (push skip done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                + prove forall left (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq (assign (var 1) 0) (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (assign (var 1) 0) (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done))) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done))) (update ENV4 1 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq 0 (assign (var 3) 0)) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) (update ENV4 1 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (assign (var 3) 0) (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) (update ENV4 1 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (seq |_| (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq 0 (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (less (var 3) (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (less |_| (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (var 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (var 4) (push (less 0 |_|) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (lookup ENV4 4) (push (less 0 |_|) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (lookup ENV4 4)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (bnot (mle (lookup ENV4 4) 0)) (push (ite |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (ite (bnot (mle (lookup ENV4 4) 0)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) done) (update (update ENV4 1 0) 3 0))) /\ (band (bnot (mle (lookup ENV4 4) 0)) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0)))))))
                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push skip done) (update (update ENV4 1 0) 3 0))) /\ (band (mle (lookup ENV4 4) 0) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (mle (lookup ENV3 2) 0))))))
                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (ite (less (var 1) (var 2)) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (bnot (mle (lookup ENV4 4) 0)) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0)))))))
                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 done) (update (update ENV4 1 0) 3 0))) /\ (band (mle (lookup ENV4 4) 0) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (mle (lookup ENV3 2) 0))))))
                                                                                                                                                                    Trying to prove base case: (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 done) (update (update ENV4 1 0) 3 0))) /\ (band (mle (lookup ENV4 4) 0) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (mle (lookup ENV3 2) 0))))))
                                                                                                                                                                    Proof succeeded: reached based equivalence.
                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (var 2) (push (less 0 |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (lookup ENV4 2) (push (less 0 |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (less 0 (lookup ENV4 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (bnot (mle (lookup ENV4 2) 0)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (ite (bnot (mle (lookup ENV4 2) 0)) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push skip done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                                                Trying to prove base case: (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push 0 done) (update (update ENV4 1 0) 3 0))) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) 0) (bnot (mle (lookup ENV4 4) 0))))))))
                                                                                                                                                                                                                Proof succeeded: reached based equivalence.
                                                                                                                                                                                                            - proof successful exists right (no unsolved cases) false
                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                - proof was successful for exists right
                                                                                                                                            - proof was successful for exists right
                                                                                                                                        - proof was successful for exists right
                                                                                                                                    - proof was successful for exists right
                                                                                                                                - proof was successful for exists right
                                                                                                                            - proof was successful for exists right
                                                                                                                        - proof was successful for exists right
                                                                                                                    - proof was successful for exists right
                                                                                                                - proof was successful for exists right
                                                                                                            - proof was successful for exists right
                                                                                                        - proof was successful for exists right
                                                                                                    - proof was successful for exists right
                                                                                                - proof was successful for exists right
                                                                                            - proof was successful for exists right
                                                                                        - proof was successful for exists right
                                                                                    - proof was successful for exists right
                                                                                - proof succeeded forall left (pair (P (push 0 done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                            - proof succeeded forall left (pair (P (push skip done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) 0))))))
                                                                        - proof succeeded forall left (pair (P (push (ite (bnot (mle (lookup ENV3 2) 0)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                                    - proof succeeded forall left (pair (P (push (bnot (mle (lookup ENV3 2) 0)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                                - proof succeeded forall left (pair (P (push (less 0 (lookup ENV3 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                            - proof succeeded forall left (pair (P (push (lookup ENV3 2) (push (less 0 |_|) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                        - proof succeeded forall left (pair (P (push (var 2) (push (less 0 |_|) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                    - proof succeeded forall left (pair (P (push (less 0 (var 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                                - proof succeeded forall left (pair (P (push 0 (push (less |_| (var 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                            - proof succeeded forall left (pair (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done))) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                        - proof succeeded forall left (pair (P (push (less (var 1) (var 2)) (push (ite |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                    - proof succeeded forall left (pair (P (push (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                                - proof succeeded forall left (pair (P (push (seq 0 (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                            - proof succeeded forall left (pair (P (push 0 (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done)) (update (update ENV3 1 0) 3 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                        - proof succeeded forall left (pair (P (push (assign (var 3) 0) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done)) (update ENV3 1 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                    - proof succeeded forall left (pair (P (push (seq 0 (assign (var 3) 0)) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done)) (update ENV3 1 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
                - proof succeeded forall left (pair (P (push 0 (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done))) (update ENV3 1 0)) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
            - proof succeeded forall left (pair (P (push (assign (var 1) 0) (push (seq |_| (assign (var 3) 0)) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done))) ENV3) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
        - proof succeeded forall left (pair (P (push (seq (assign (var 1) 0) (assign (var 3) 0)) (push (seq |_| (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done)) ENV3) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
    - proof succeeded forall left (pair (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 1) (var 2)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) skip)) done) ENV3) (P (push (seq (seq (assign (var 1) 0) (assign (var 3) 0)) (ite (less (var 3) (var 4)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) skip)) done) ENV4)) /\ (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))
Proof succeeded.
Succeeded in proving circularity #1
Proving simulation circularity #2
Proving simulation circularity (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) ENV3) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (band (band (band (band (mless (lookup ENV3 1) (lookup ENV3 2)) (mless (lookup ENV3 3) (lookup ENV3 4))) (band (mless (lookup ENV4 1) (lookup ENV4 2)) (mless (lookup ENV4 3) (lookup ENV4 4)))) (band (band (band (mle 0 (lookup ENV3 1)) (mle 0 (lookup ENV3 3))) (band (mle 0 (lookup ENV4 1)) (mle 0 (lookup ENV4 3)))) (band (mequals (mplus (mtimes (lookup ENV3 3) (lookup ENV3 2)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) true))) (band (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (mequals (lookup ENV3 11) (lookup ENV4 11))) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (mequals (lookup ENV3 2) (lookup ENV4 2))))) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))
    + prove forall left (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) ENV3) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (band (band (band (band (mless (lookup ENV3 1) (lookup ENV3 2)) (mless (lookup ENV3 3) (lookup ENV3 4))) (band (mless (lookup ENV4 1) (lookup ENV4 2)) (mless (lookup ENV4 3) (lookup ENV4 4)))) (band (band (band (mle 0 (lookup ENV3 1)) (mle 0 (lookup ENV3 3))) (band (mle 0 (lookup ENV4 1)) (mle 0 (lookup ENV4 3)))) (band (mequals (mplus (mtimes (lookup ENV3 3) (lookup ENV3 2)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) true))) (band (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (mequals (lookup ENV3 11) (lookup ENV4 11))) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (mequals (lookup ENV3 2) (lookup ENV4 2))))) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))
        + prove forall left (pair (P (push 0 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
            + prove forall left (pair (P (push (seq 0 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                + prove forall left (pair (P (push (assign (var 1) (plus (var 1) 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                    + prove forall left (pair (P (push (plus (var 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                        + prove forall left (pair (P (push (var 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                            + prove forall left (pair (P (push (lookup ENV3 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                + prove forall left (pair (P (push (plus (lookup ENV3 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                    + prove forall left (pair (P (push (mplus 1 (lookup ENV3 1)) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                        + prove forall left (pair (P (push (assign (var 1) (mplus 1 (lookup ENV3 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                            + prove forall left (pair (P (push (mplus 1 (lookup ENV3 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                + prove forall left (pair (P (push (seq (mplus 1 (lookup ENV3 1)) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                    + prove forall left (pair (P (push (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                        + prove forall left (pair (P (push (ite (less (var 1) (var 2)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                            + prove forall left (pair (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                + prove forall left (pair (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                    + prove forall left (pair (P (push (mplus 1 (lookup ENV3 1)) (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                        + prove forall left (pair (P (push (less (mplus 1 (lookup ENV3 1)) (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                            + prove forall left (pair (P (push (var 2) (push (less (mplus 1 (lookup ENV3 1)) |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                                + prove forall left (pair (P (push (lookup ENV3 2) (push (less (mplus 1 (lookup ENV3 1)) |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                                    + prove forall left (pair (P (push (less (mplus 1 (lookup ENV3 1)) (lookup ENV3 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                                        + prove forall left (pair (P (push (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                                            + prove forall left (pair (P (push (ite (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                                                + prove forall left (pair (P (push (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                    + prove forall left (pair (P (push (seq S1 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                        + prove forall left (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                Trying to prove base case: (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                Instance of base only when false
                                                                                                                Instance of circularity only when (bor (bnot (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle -1 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus -1 (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3)))) (band (mequals (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15))))))))))))))))
                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq 0 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 3) (plus (var 3) 1)) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (var 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (lookup ENV4 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 3)) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 3) (mplus 1 (lookup ENV4 3))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 3)) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (mplus 1 (lookup ENV4 3)) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (less (var 3) (var 4)) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 3)) (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 3)) (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 4) (push (less (mplus 1 (lookup ENV4 3)) |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 4) (push (less (mplus 1 (lookup ENV4 3)) |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 3)) (lookup ENV4 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))))))))))))))))))))
                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push skip (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))))))))))))))))))))
                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq S1 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))))))))))))))))))))
                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))))))))))))))))))))
                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))))))))))))))))))))
                                                                                                                                                                                                                    Trying to prove base case: (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))))))))))))))))))))
                                                                                                                                                                                                                    Instance of base only when false
                                                                                                                                                                                                                    Proof succeeded: reached a circularity.
                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq 0 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 1) (plus (var 1) 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (var 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (lookup ENV4 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 1)) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 1) (mplus 1 (lookup ENV4 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (mplus 1 (lookup ENV4 1)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (less (var 1) (var 2)) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 1)) (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 1)) (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 2) (push (less (mplus 1 (lookup ENV4 1)) |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 2) (push (less (mplus 1 (lookup ENV4 1)) |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 1)) (lookup ENV4 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (bnot (mle (lookup ENV4 2) (mplus 1 (lookup ENV4 1)))) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (bnot (mle (lookup ENV4 2) (mplus 1 (lookup ENV4 1)))) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 3) 0) (push (seq |_| (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (seq |_| (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq 0 (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (less (var 3) (var 4)) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less 0 (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 4) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 4) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less 0 (lookup ENV4 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (bnot (mle (lookup ENV4 4) 0)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (bnot (mle (lookup ENV4 4) 0)) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq S1 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                    Trying to prove base case: (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                    Instance of base only when false
                                                                                                                                                                                                                                                                                                                                                                                    Proof succeeded: reached a circularity.
                                                                                                                                                                                                                                                                                                                                                                                - proof successful exists right (no unsolved cases) false
                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                - proof was successful for exists right
                                                                                                                                            - proof was successful for exists right
                                                                                                                                        - proof was successful for exists right
                                                                                                                                    - proof was successful for exists right
                                                                                                                                - proof was successful for exists right
                                                                                                                            - proof was successful for exists right
                                                                                                                        - proof was successful for exists right
                                                                                                                    - proof was successful for exists right
                                                                                                                - proof was successful for exists right
                                                                                                            - proof was successful for exists right
                                                                                                        - proof succeeded forall left (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                    - proof succeeded forall left (pair (P (push (seq S1 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                - proof succeeded forall left (pair (P (push (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))))))
                                                                                                + prove forall left (pair (P (push skip (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                    + prove forall left (pair (P (push 0 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                        + prove forall left (pair (P (push (seq 0 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                            + prove forall left (pair (P (push (assign (var 3) (plus (var 3) 1)) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                + prove forall left (pair (P (push (plus (var 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                    + prove forall left (pair (P (push (var 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                        + prove forall left (pair (P (push (lookup ENV3 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                            + prove forall left (pair (P (push (plus (lookup ENV3 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                + prove forall left (pair (P (push (mplus 1 (lookup ENV3 3)) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                    + prove forall left (pair (P (push (assign (var 3) (mplus 1 (lookup ENV3 3))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                        + prove forall left (pair (P (push (mplus 1 (lookup ENV3 3)) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                            + prove forall left (pair (P (push (seq (mplus 1 (lookup ENV3 3)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                + prove forall left (pair (P (push (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                    + prove forall left (pair (P (push (ite (less (var 3) (var 4)) (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                        + prove forall left (pair (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                            + prove forall left (pair (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                + prove forall left (pair (P (push (mplus 1 (lookup ENV3 3)) (push (less |_| (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                    + prove forall left (pair (P (push (less (mplus 1 (lookup ENV3 3)) (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                        + prove forall left (pair (P (push (var 4) (push (less (mplus 1 (lookup ENV3 3)) |_|) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                            + prove forall left (pair (P (push (lookup ENV3 4) (push (less (mplus 1 (lookup ENV3 3)) |_|) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                + prove forall left (pair (P (push (less (mplus 1 (lookup ENV3 3)) (lookup ENV3 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                    + prove forall left (pair (P (push (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                        + prove forall left (pair (P (push (ite (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                            + prove forall left (pair (P (push (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                + prove forall left (pair (P (push (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                    + prove forall left (pair (P (push (assign (var 1) 0) (push (seq |_| (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                        + prove forall left (pair (P (push 0 (push (seq |_| (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                            + prove forall left (pair (P (push (seq 0 (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                + prove forall left (pair (P (push (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                    + prove forall left (pair (P (push (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                        + prove forall left (pair (P (push (ite (less (var 1) (var 2)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                            + prove forall left (pair (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                + prove forall left (pair (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                    + prove forall left (pair (P (push 0 (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                        + prove forall left (pair (P (push (less 0 (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                            + prove forall left (pair (P (push (var 2) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                + prove forall left (pair (P (push (lookup ENV3 2) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                    + prove forall left (pair (P (push (less 0 (lookup ENV3 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                        + prove forall left (pair (P (push (bnot (mle (lookup ENV3 2) 0)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                            + prove forall left (pair (P (push (ite (bnot (mle (lookup ENV3 2) 0)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                + prove forall left (pair (P (push (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                    + prove forall left (pair (P (push (seq S1 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                        + prove forall left (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                Trying to prove base case: (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                Instance of base only when false
                                                                                                                                                                                                                                                                                Instance of circularity only when (bnot (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))))
                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq 0 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 3) (plus (var 3) 1)) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (var 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (lookup ENV4 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 3)) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 3) (mplus 1 (lookup ENV4 3))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 3)) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (mplus 1 (lookup ENV4 3)) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (less (var 3) (var 4)) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 3)) (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 3)) (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 4) (push (less (mplus 1 (lookup ENV4 3)) |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 4) (push (less (mplus 1 (lookup ENV4 3)) |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 3)) (lookup ENV4 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push skip (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq S1 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                    Trying to prove base case: (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                    Instance of base only when false
                                                                                                                                                                                                                                                                                                                                                                                    Proof succeeded: reached a circularity.
                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq 0 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 1) (plus (var 1) 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (var 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (lookup ENV4 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 1)) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 1) (mplus 1 (lookup ENV4 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (mplus 1 (lookup ENV4 1)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (less (var 1) (var 2)) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 1)) (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 1)) (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 2) (push (less (mplus 1 (lookup ENV4 1)) |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 2) (push (less (mplus 1 (lookup ENV4 1)) |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 1)) (lookup ENV4 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (bnot (mle (lookup ENV4 2) (mplus 1 (lookup ENV4 1)))) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (bnot (mle (lookup ENV4 2) (mplus 1 (lookup ENV4 1)))) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 3) 0) (push (seq |_| (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (seq |_| (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq 0 (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (less (var 3) (var 4)) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less 0 (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 4) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 4) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less 0 (lookup ENV4 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (bnot (mle (lookup ENV4 4) 0)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (bnot (mle (lookup ENV4 4) 0)) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq S1 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
prove exists right (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
rying to prove base case: (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 0) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))))))))))))))))
nstance of base only when false
roof succeeded: reached a circularity.
proof successful exists right (no unsolved cases) false
proof was successful for exists right
proof was successful for exists right
proof was successful for exists right
proof was successful for exists right
proof was successful for exists right
proof was successful for exists right
proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                        - proof succeeded forall left (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                    - proof succeeded forall left (pair (P (push (seq S1 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                                - proof succeeded forall left (pair (P (push (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                            - proof succeeded forall left (pair (P (push (ite (bnot (mle (lookup ENV3 2) 0)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                        - proof succeeded forall left (pair (P (push (bnot (mle (lookup ENV3 2) 0)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                    - proof succeeded forall left (pair (P (push (less 0 (lookup ENV3 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                                - proof succeeded forall left (pair (P (push (lookup ENV3 2) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                            - proof succeeded forall left (pair (P (push (var 2) (push (less 0 |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                        - proof succeeded forall left (pair (P (push (less 0 (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                    - proof succeeded forall left (pair (P (push 0 (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                                - proof succeeded forall left (pair (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                            - proof succeeded forall left (pair (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                        - proof succeeded forall left (pair (P (push (ite (less (var 1) (var 2)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                    - proof succeeded forall left (pair (P (push (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                                - proof succeeded forall left (pair (P (push (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                            - proof succeeded forall left (pair (P (push (seq 0 (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                        - proof succeeded forall left (pair (P (push 0 (push (seq |_| (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 0) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                    - proof succeeded forall left (pair (P (push (assign (var 1) 0) (push (seq |_| (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                                - proof succeeded forall left (pair (P (push (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                            - proof succeeded forall left (pair (P (push (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))))))))))))))))
                                                                                                                                                                                            + prove forall left (pair (P (push skip done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                + prove forall left (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq 0 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 3) (plus (var 3) 1)) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (var 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (lookup ENV4 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 3)) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 3) (mplus 1 (lookup ENV4 3))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update ENV4 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 3)) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (mplus 1 (lookup ENV4 3)) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (less (var 3) (var 4)) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 3)) (push (less |_| (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 3)) (var 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 4) (push (less (mplus 1 (lookup ENV4 3)) |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 4) (push (less (mplus 1 (lookup ENV4 3)) |_|) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 3)) (lookup ENV4 4)) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (push (ite |_| (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (bnot (mle (lookup ENV4 4) (mplus 1 (lookup ENV4 3)))) (seq (seq S1 (assign (var 3) (plus (var 3) 1))) (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) skip) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push skip (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq 0 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 1) (plus (var 1) 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (var 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (plus (lookup ENV4 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 1)) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (assign (var 1) (mplus 1 (lookup ENV4 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update ENV4 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (seq (mplus 1 (lookup ENV4 1)) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1))))) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (less (var 1) (var 2)) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (mplus 1 (lookup ENV4 1)) (push (less |_| (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 1)) (var 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (var 2) (push (less (mplus 1 (lookup ENV4 1)) |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (lookup ENV4 2) (push (less (mplus 1 (lookup ENV4 1)) |_|) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done))) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (less (mplus 1 (lookup ENV4 1)) (lookup ENV4 2)) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                    + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (bnot (mle (lookup ENV4 2) (mplus 1 (lookup ENV4 1)))) (push (ite |_| (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done)) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                        + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push (ite (bnot (mle (lookup ENV4 2) (mplus 1 (lookup ENV4 1)))) (seq (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))) (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) skip) done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                            + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push skip done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                + prove exists right (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                    Trying to prove base case: (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push 0 done) (update (update (update ENV4 1 (mplus 1 (lookup ENV4 1))) 3 (mplus 1 (lookup ENV4 3))) 12 (iS1 (lookup ENV4 11) (lookup ENV4 12) (lookup ENV4 2) (lookup ENV4 4))))) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                                                                                                                                                                                                                                    Proof succeeded: reached based equivalence.
                                                                                                                                                                                                                                                                                                                                                                                                - proof successful exists right (no unsolved cases) false
                                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                                - proof was successful for exists right
                                                                                                                                                                                                            - proof was successful for exists right
                                                                                                                                                                                                        - proof was successful for exists right
                                                                                                                                                                                                    - proof was successful for exists right
                                                                                                                                                                                                - proof succeeded forall left (pair (P (push 0 done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                            - proof succeeded forall left (pair (P (push skip done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (band (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1))) (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3))))))))))))))))
                                                                                                                                                                                        - proof succeeded forall left (pair (P (push (ite (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                    - proof succeeded forall left (pair (P (push (bnot (mle (lookup ENV3 4) (mplus 1 (lookup ENV3 3)))) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                                - proof succeeded forall left (pair (P (push (less (mplus 1 (lookup ENV3 3)) (lookup ENV3 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                            - proof succeeded forall left (pair (P (push (lookup ENV3 4) (push (less (mplus 1 (lookup ENV3 3)) |_|) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                        - proof succeeded forall left (pair (P (push (var 4) (push (less (mplus 1 (lookup ENV3 3)) |_|) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                    - proof succeeded forall left (pair (P (push (less (mplus 1 (lookup ENV3 3)) (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                                - proof succeeded forall left (pair (P (push (mplus 1 (lookup ENV3 3)) (push (less |_| (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                            - proof succeeded forall left (pair (P (push (var 3) (push (less |_| (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done))) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                        - proof succeeded forall left (pair (P (push (less (var 3) (var 4)) (push (ite |_| (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                    - proof succeeded forall left (pair (P (push (ite (less (var 3) (var 4)) (seq (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) skip) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                                - proof succeeded forall left (pair (P (push (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1))))) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                            - proof succeeded forall left (pair (P (push (seq (mplus 1 (lookup ENV3 3)) (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                        - proof succeeded forall left (pair (P (push (mplus 1 (lookup ENV3 3)) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 3 (mplus 1 (lookup ENV3 3))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                    - proof succeeded forall left (pair (P (push (assign (var 3) (mplus 1 (lookup ENV3 3))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                                - proof succeeded forall left (pair (P (push (mplus 1 (lookup ENV3 3)) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                            - proof succeeded forall left (pair (P (push (plus (lookup ENV3 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                        - proof succeeded forall left (pair (P (push (lookup ENV3 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                    - proof succeeded forall left (pair (P (push (var 3) (push (plus |_| 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                                - proof succeeded forall left (pair (P (push (plus (var 3) 1) (push (assign (var 3) |_|) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                            - proof succeeded forall left (pair (P (push (assign (var 3) (plus (var 3) 1)) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                        - proof succeeded forall left (pair (P (push (seq 0 (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                    - proof succeeded forall left (pair (P (push 0 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                                - proof succeeded forall left (pair (P (push skip (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (band (mle (lookup ENV3 4) 15) (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))))))))))))))
                                                                                            - proof succeeded forall left (pair (P (push (ite (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                                        - proof succeeded forall left (pair (P (push (bnot (mle (lookup ENV3 2) (mplus 1 (lookup ENV3 1)))) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                                    - proof succeeded forall left (pair (P (push (less (mplus 1 (lookup ENV3 1)) (lookup ENV3 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                                - proof succeeded forall left (pair (P (push (lookup ENV3 2) (push (less (mplus 1 (lookup ENV3 1)) |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                            - proof succeeded forall left (pair (P (push (var 2) (push (less (mplus 1 (lookup ENV3 1)) |_|) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                        - proof succeeded forall left (pair (P (push (less (mplus 1 (lookup ENV3 1)) (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                    - proof succeeded forall left (pair (P (push (mplus 1 (lookup ENV3 1)) (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                                - proof succeeded forall left (pair (P (push (var 1) (push (less |_| (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                            - proof succeeded forall left (pair (P (push (less (var 1) (var 2)) (push (ite |_| (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                        - proof succeeded forall left (pair (P (push (ite (less (var 1) (var 2)) (seq (seq S1 (assign (var 1) (plus (var 1) 1))) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) skip) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                    - proof succeeded forall left (pair (P (push (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                                - proof succeeded forall left (pair (P (push (seq (mplus 1 (lookup ENV3 1)) (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                            - proof succeeded forall left (pair (P (push (mplus 1 (lookup ENV3 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update (update ENV3 1 (mplus 1 (lookup ENV3 1))) 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                        - proof succeeded forall left (pair (P (push (assign (var 1) (mplus 1 (lookup ENV3 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                    - proof succeeded forall left (pair (P (push (mplus 1 (lookup ENV3 1)) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                                - proof succeeded forall left (pair (P (push (plus (lookup ENV3 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                            - proof succeeded forall left (pair (P (push (lookup ENV3 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                        - proof succeeded forall left (pair (P (push (var 1) (push (plus |_| 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                    - proof succeeded forall left (pair (P (push (plus (var 1) 1) (push (assign (var 1) |_|) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
                - proof succeeded forall left (pair (P (push (assign (var 1) (plus (var 1) 1)) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
            - proof succeeded forall left (pair (P (push (seq 0 (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done)))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
        - proof succeeded forall left (pair (P (push 0 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) (update ENV3 12 (iS1 (lookup ENV3 11) (lookup ENV3 12) (lookup ENV3 2) (lookup ENV3 4)))) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
    - proof succeeded forall left (pair (P (push S1 (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1))))) (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq (assign (var 1) 0) (seq (while (less (var 1) (var 2)) (seq S1 (assign (var 1) (plus (var 1) 1)))) (assign (var 3) (plus (var 3) 1)))))) done))))) ENV3) (P (push S1 (push (seq |_| (assign (var 3) (plus (var 3) 1))) (push (seq |_| (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1))))) (push (seq |_| (assign (var 1) (plus (var 1) 1))) (push (seq |_| (while (less (var 1) (var 2)) (seq (assign (var 3) 0) (seq (while (less (var 3) (var 4)) (seq S1 (assign (var 3) (plus (var 3) 1)))) (assign (var 1) (plus (var 1) 1)))))) done))))) ENV4)) /\ (band (bnot (mle (lookup ENV3 2) (lookup ENV3 1))) (band (bnot (mle (lookup ENV3 4) (lookup ENV3 3))) (band (bnot (mle (lookup ENV4 2) (lookup ENV4 1))) (band (bnot (mle (lookup ENV4 4) (lookup ENV4 3))) (band (mle 0 (lookup ENV3 1)) (band (mle 0 (lookup ENV3 3)) (band (mle 0 (lookup ENV4 1)) (band (mle 0 (lookup ENV4 3)) (band (mequals (mplus (mtimes (lookup ENV3 2) (lookup ENV3 3)) (lookup ENV3 1)) (mplus (mtimes (lookup ENV4 1) (lookup ENV4 4)) (lookup ENV4 3))) (band (mequals (lookup ENV3 12) (lookup ENV4 12)) (band (mequals (lookup ENV3 11) (lookup ENV4 11)) (band (mequals (lookup ENV3 4) (lookup ENV4 4)) (band (mequals (lookup ENV3 2) (lookup ENV4 2)) (band (mle (lookup ENV3 2) 15) (mle (lookup ENV3 4) 15)))))))))))))))
Proof succeeded.
Succeeded in proving circularity #2
Succeeded in proving ALL circularities
