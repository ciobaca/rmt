INF Creating interpreted sort Bool as (Bool).
INF Creating interpreted sort Int as (Int).
INF Creating interpreted function 0 (as 0) :  -> Int
INF Creating interpreted function 1 (as 1) :  -> Int
INF Creating interpreted function 2 (as 2) :  -> Int
INF Creating interpreted function 3 (as 3) :  -> Int
INF Creating interpreted function 4 (as 4) :  -> Int
INF Creating interpreted function 5 (as 5) :  -> Int
INF Creating interpreted function 6 (as 6) :  -> Int
INF Creating interpreted function 7 (as 7) :  -> Int
INF Creating interpreted function 8 (as 8) :  -> Int
INF Creating interpreted function 9 (as 9) :  -> Int
INF Creating interpreted function 10 (as 10) :  -> Int
INF Creating interpreted function 11 (as 11) :  -> Int
INF Creating interpreted function 12 (as 12) :  -> Int
INF Creating interpreted function 13 (as 13) :  -> Int
INF Creating interpreted function 14 (as 14) :  -> Int
INF Creating interpreted function 15 (as 15) :  -> Int
INF Creating interpreted function mplus (as +) : Int Int  -> Int
INF Creating interpreted function mminus (as -) : Int Int  -> Int
INF Creating interpreted function mtimes (as *) : Int Int  -> Int
INF Creating interpreted function mdiv (as div) : Int Int  -> Int
INF Creating interpreted function mmod (as mod) : Int Int  -> Int
INF Creating interpreted function mle (as <=) : Int Int  -> Bool
INF Creating interpreted function mge (as >=) : Int Int  -> Bool
INF Creating interpreted function mless (as <) : Int Int  -> Bool
INF Creating interpreted function mgt (as >) : Int Int  -> Bool
INF Creating interpreted function mequals (as =) : Int Int  -> Bool
INF Creating interpreted function iteInt (as ite) : Bool Int Int  -> Bool
INF Creating interpreted function true (as true) :  -> Bool
INF Creating interpreted function false (as false) :  -> Bool
INF Creating interpreted function bnot (as not) : Bool  -> Bool
INF Creating interpreted function band (as and) : Bool Bool  -> Bool
INF Creating interpreted function biff (as iff) : Bool Bool  -> Bool
INF Creating interpreted function bor (as or) : Bool Bool  -> Bool
INF Creating interpreted function bimplies (as =>) : Bool Bool  -> Bool
INF Creating interpreted function bequals (as =) : Bool Bool  -> Bool
INF Creating uninterpreted function _existsBool : Bool Bool  -> Bool
INF Creating uninterpreted function _existsInt : Int Bool  -> Bool
INF Creating uninterpreted function _forallBool : Bool Bool  -> Bool
INF Creating uninterpreted function _forallInt : Int Bool  -> Bool
INF Creating uninterpreted sort IntP.
INF Creating uninterpreted sort BoolP.
INF Creating uninterpreted sort Var.
INF Creating uninterpreted sort AExp.
INF Creating uninterpreted sort BExp.
INF Creating uninterpreted sort NonValAExp.
INF Creating uninterpreted sort NonValBExp.
INF Creating uninterpreted sort Stmt.
INF Creating uninterpreted sort Code.
INF Creating uninterpreted sort CompStack.
INF Creating Array sort with domain Int and range Int
INF Creating interpreted sort Map as ((Array Int Int)).
INF Creating uninterpreted function _existsMap : Map Bool  -> Bool
INF Creating uninterpreted function _forallMap : Map Bool  -> Bool
INF Creating uninterpreted sort CfgI.
INF Creating uninterpreted sort State.
INF Creating uninterpreted sort VarF.
INF Creating uninterpreted sort ExpF.
INF Creating uninterpreted sort NonValExpF.
INF Creating uninterpreted sort ValExpF.
INF Creating uninterpreted sort CfgF.
INF Creating interpreted function sum (as 02B1938C) : Int Int  -> Int
INF Creating interpreted function sumUpTo (as 02B1B314) : Int  -> Int
INF Creating interpreted function muifun (as 02B193B4) : Int Int  -> Int
INF Creating interpreted function iS1 (as 02B478AC) : Int Int Int Int  -> Int
INF Creating interpreted function iE1 (as 02B193DC) : Int Int  -> Int
INF Creating interpreted function meven (as 02B1B338) : Int  -> Bool
INF Declaring the sorts: Int as subsorts of IntP 
INF Declaring the sorts: IntP as subsorts of AExp 
INF Declaring the sorts: Var as subsorts of NonValAExp 
INF Declaring the sorts: NonValAExp as subsorts of AExp 
INF Declaring the sorts: NonValBExp as subsorts of BExp 
INF Declaring the sorts: AExp BExp Stmt as subsorts of Code 
INF Declaring the sorts: Bool as subsorts of BoolP 
INF Declaring the sorts: BoolP as subsorts of BExp 
INF Declaring the sorts: AExp as subsorts of Stmt 
INF Declaring the sorts: BExp as subsorts of Stmt 
INF Declaring the sorts: Bool as subsorts of ValExpF 
INF Declaring the sorts: Int as subsorts of ValExpF 
INF Declaring the sorts: VarF as subsorts of ExpF 
INF Declaring the sorts: ValExpF as subsorts of ExpF 
INF Declaring the sorts: NonValExpF as subsorts of ExpF 
INF Creating uninterpreted function pair : CfgI CfgF  -> State
INF Creating interpreted function mapequals (as =) : Map Map  -> Bool
INF Creating interpreted function vfequals (as =) : VarF VarF  -> Bool
INF Creating uninterpreted function var : Int  -> Var
INF Creating uninterpreted function fvar : Int  -> VarF
INF Creating uninterpreted function miu : VarF ExpF  -> NonValExpF
INF Creating uninterpreted function lam : VarF ExpF  -> ValExpF
INF Creating uninterpreted function fplus : ExpF ExpF  -> NonValExpF
INF Creating uninterpreted function fminus : ExpF ExpF  -> NonValExpF
INF Creating uninterpreted function fle : ExpF ExpF  -> NonValExpF
INF Creating uninterpreted function fless : ExpF ExpF  -> NonValExpF
INF Creating uninterpreted function fite : ExpF ExpF ExpF  -> NonValExpF
INF Creating uninterpreted function app : ExpF ExpF  -> NonValExpF
INF Creating uninterpreted function F : ExpF  -> CfgF
INF Creating uninterpreted function iequals : AExp AExp  -> NonValBExp
INF Creating uninterpreted function iequalshl : AExp  -> BExp
INF Creating uninterpreted function iequalshr : AExp  -> BExp
INF Creating uninterpreted function contextexp : ExpF  -> ExpF
INF Creating uninterpreted function pS1 :  -> Stmt
INF Creating uninterpreted function pE1 :  -> NonValAExp
INF Creating uninterpreted function times : AExp AExp  -> NonValAExp
INF Creating uninterpreted function timeshl : AExp  -> AExp
INF Creating uninterpreted function timeshr : AExp  -> AExp
INF Creating interpreted function synEq (as =) : Var Var  -> Bool
INF Creating interpreted function update (as store) : Map Int Int  -> Map
INF Creating interpreted function lookup (as select) : Map Int  -> Int
INF Creating uninterpreted function plus : AExp AExp  -> NonValAExp
INF Creating uninterpreted function plushl : AExp  -> AExp
INF Creating uninterpreted function plushr : AExp  -> AExp
INF Creating uninterpreted function div : AExp AExp  -> NonValAExp
INF Creating uninterpreted function divhl : AExp  -> AExp
INF Creating uninterpreted function divhr : AExp  -> AExp
INF Creating uninterpreted function uifun : AExp AExp  -> NonValAExp
INF Creating uninterpreted function uifunhl : AExp  -> AExp
INF Creating uninterpreted function uifunhr : AExp  -> AExp
INF Creating uninterpreted function minus : AExp AExp  -> NonValAExp
INF Creating uninterpreted function minushl : AExp  -> AExp
INF Creating uninterpreted function minushr : AExp  -> AExp
INF Creating uninterpreted function pred : AExp  -> NonValAExp
INF Creating uninterpreted function predh :  -> Stmt
INF Creating uninterpreted function fnot : ExpF  -> NonValExpF
INF Creating uninterpreted function fequals : ExpF ExpF  -> NonValExpF
INF Creating uninterpreted function succ : AExp  -> NonValAExp
INF Creating uninterpreted function succh :  -> Stmt
INF Creating uninterpreted function le : AExp AExp  -> NonValBExp
INF Creating uninterpreted function lehl : AExp  -> BExp
INF Creating uninterpreted function lehr : AExp  -> BExp
INF Creating uninterpreted function less : AExp AExp  -> NonValBExp
INF Creating uninterpreted function lesshl : AExp  -> BExp
INF Creating uninterpreted function lesshr : AExp  -> BExp
INF Creating uninterpreted function fdiv : ExpF ExpF  -> NonValExpF
INF Creating uninterpreted function not : BExp  -> NonValBExp
INF Creating uninterpreted function noth :  -> Stmt
INF Creating uninterpreted function ieven : AExp  -> NonValBExp
INF Creating uninterpreted function ievenh :  -> AExp
INF Creating uninterpreted function ftimes : ExpF ExpF  -> NonValExpF
INF Creating uninterpreted function feven : ExpF  -> NonValExpF
INF Creating uninterpreted function done :  -> CompStack
INF Creating uninterpreted function push : Code CompStack  -> CompStack
INF Creating uninterpreted function IC : CompStack Map  -> CfgI
INF Creating uninterpreted function assign : Var AExp  -> Stmt
INF Creating uninterpreted function assignh : Var  -> Stmt
INF Creating uninterpreted function skip :  -> Stmt
INF Creating uninterpreted function seq : Stmt Stmt  -> Stmt
INF Creating uninterpreted function ite : BExp Stmt Stmt  -> Stmt
INF Creating uninterpreted function iteh : Stmt Stmt  -> Stmt
INF Creating uninterpreted function while : BExp Stmt  -> Stmt
INF Creating uninterpreted function for : Var AExp AExp Stmt  -> Stmt
INF Creating uninterpreted function forhl : Var AExp Stmt  -> Stmt
INF Creating uninterpreted function forhr : Var AExp Stmt  -> Stmt
INF Creating uninterpreted function substitute : VarF ExpF ExpF  -> ExpF
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP I) /\ true => I
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP B) /\ true => B
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fvar X)) /\ true => FEXP
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fvar Y)) /\ (bnot (mequals X Y)) => (fvar Y)
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fplus FEXP1 FEXP2)) /\ true => (fplus (substitute (fvar X) FEXP FEXP1) (substitute (fvar X) FEXP FEXP2))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fminus FEXP1 FEXP2)) /\ true => (fminus (substitute (fvar X) FEXP FEXP1) (substitute (fvar X) FEXP FEXP2))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fless FEXP1 FEXP2)) /\ true => (fless (substitute (fvar X) FEXP FEXP1) (substitute (fvar X) FEXP FEXP2))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fle FEXP1 FEXP2)) /\ true => (fle (substitute (fvar X) FEXP FEXP1) (substitute (fvar X) FEXP FEXP2))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fite FEXP1 FEXP2 FEXP3)) /\ true => (fite (substitute (fvar X) FEXP FEXP1) (substitute (fvar X) FEXP FEXP2) (substitute (fvar X) FEXP FEXP3))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fnot FEXP1)) /\ true => (fnot (substitute (fvar X) FEXP FEXP1))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (ftimes FEXP1 FEXP2)) /\ true => (ftimes (substitute (fvar X) FEXP FEXP1) (substitute (fvar X) FEXP FEXP2))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (feven FEXP1)) /\ true => (feven (substitute (fvar X) FEXP FEXP1))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fdiv FEXP1 FEXP2)) /\ true => (fdiv (substitute (fvar X) FEXP FEXP1) (substitute (fvar X) FEXP FEXP2))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (fequals FEXP1 FEXP2)) /\ true => (fequals (substitute (fvar X) FEXP FEXP1) (substitute (fvar X) FEXP FEXP2))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP (app FEXP1 FEXP2)) /\ true => (app (substitute (fvar X) FEXP FEXP1) (substitute (fvar X) FEXP FEXP2))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP1 (lam (fvar X) FEXP)) /\ true => (lam (fvar X) FEXP)
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP1 (lam (fvar Y) FEXP)) /\ (bnot (mequals X Y)) => (lam (fvar Y) (substitute (fvar X) FEXP1 FEXP))
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP1 (miu (fvar X) FEXP)) /\ true => (miu (fvar X) FEXP)
INF Parsed rewrite rule for func def: (substitute (fvar X) FEXP1 (miu (fvar Y) FEXP)) /\ (bnot (mequals X Y)) => (miu (fvar Y) (substitute (fvar X) FEXP1 FEXP))
INF Parsed rewrite rule: (IC (push (var X) REST) ENV) /\ true => (IC (push (lookup ENV X) REST) ENV)
INF Parsed rewrite rule: (IC (push (pred N) REST) ENV) /\ true => (IC (push (mminus N 1) REST) ENV)
INF Parsed rewrite rule: (IC (push (pred NVAE) REST) ENV) /\ true => (IC (push NVAE (push predh REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push predh REST)) ENV) /\ true => (IC (push (pred N) REST) ENV)
INF Parsed rewrite rule: (IC (push (not B) REST) ENV) /\ true => (IC (push (bnot B) REST) ENV)
INF Parsed rewrite rule: (IC (push (not NVBE) REST) ENV) /\ true => (IC (push NVBE (push noth REST)) ENV)
INF Parsed rewrite rule: (IC (push B (push noth REST)) ENV) /\ true => (IC (push (not B) REST) ENV)
INF Parsed rewrite rule: (IC (push (succ N) REST) ENV) /\ true => (IC (push (mplus N 1) REST) ENV)
INF Parsed rewrite rule: (IC (push (succ NVAE) REST) ENV) /\ true => (IC (push NVAE (push succh REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push succh REST)) ENV) /\ true => (IC (push (succ N) REST) ENV)
INF Parsed rewrite rule: (IC (push (assign (var X) N) REST) ENV) /\ true => (IC REST (update ENV X N))
INF Parsed rewrite rule: (IC (push (assign (var X) NVAE) REST) ENV) /\ true => (IC (push NVAE (push (assignh (var X)) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (assignh (var X)) REST)) ENV) /\ true => (IC (push (assign (var X) N) REST) ENV)
INF Parsed rewrite rule: (IC (push (seq S1 S2) REST) ENV) /\ true => (IC (push S1 (push S2 REST)) ENV)
INF Parsed rewrite rule: (IC (push skip REST) ENV) /\ true => (IC REST ENV)
INF Parsed rewrite rule: (IC (push (ite NVBE S1 S2) REST) ENV) /\ true => (IC (push NVBE (push (iteh S1 S2) REST)) ENV)
INF Parsed rewrite rule: (IC (push B (push (iteh S1 S2) REST)) ENV) /\ true => (IC (push (ite B S1 S2) REST) ENV)
INF Parsed rewrite rule: (IC (push (ite true S1 S2) REST) ENV) /\ true => (IC (push S1 REST) ENV)
INF Parsed rewrite rule: (IC (push (ite false S1 S2) REST) ENV) /\ true => (IC (push S2 REST) ENV)
INF Parsed rewrite rule: (IC (push (ieven N) REST) ENV) /\ true => (IC (push (meven N) REST) ENV)
INF Parsed rewrite rule: (IC (push (iequals N M) REST) ENV) /\ true => (IC (push (mequals N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (iequals NVAE1 AE2) REST) ENV) /\ true => (IC (push NVAE1 (push (iequalshl AE2) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (iequalshl AE2) REST)) ENV) /\ true => (IC (push (iequals N AE2) REST) ENV)
INF Parsed rewrite rule: (IC (push (iequals N NVAE2) REST) ENV) /\ true => (IC (push NVAE2 (push (iequalshr N) REST)) ENV)
INF Parsed rewrite rule: (IC (push M (push (iequalshr N) REST)) ENV) /\ true => (IC (push (iequals N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (times N M) REST) ENV) /\ true => (IC (push (mtimes N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (times NVAE1 AE2) REST) ENV) /\ true => (IC (push NVAE1 (push (timeshl AE2) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (timeshl AE2) REST)) ENV) /\ true => (IC (push (times N AE2) REST) ENV)
INF Parsed rewrite rule: (IC (push (times N NVAE2) REST) ENV) /\ true => (IC (push NVAE2 (push (timeshr N) REST)) ENV)
INF Parsed rewrite rule: (IC (push M (push (timeshr N) REST)) ENV) /\ true => (IC (push (times N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (div N M) REST) ENV) /\ true => (IC (push (mdiv N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (div NVAE1 AE2) REST) ENV) /\ true => (IC (push NVAE1 (push (divhl AE2) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (divhl AE2) REST)) ENV) /\ true => (IC (push (div N AE2) REST) ENV)
INF Parsed rewrite rule: (IC (push (div N NVAE2) REST) ENV) /\ true => (IC (push NVAE2 (push (divhr N) REST)) ENV)
INF Parsed rewrite rule: (IC (push M (push (divhr N) REST)) ENV) /\ true => (IC (push (div N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (while BE S) REST) ENV) /\ true => (IC (push (ite BE (seq S (while BE S)) skip) REST) ENV)
INF Parsed rewrite rule: (IC (push (plus N M) REST) ENV) /\ true => (IC (push (mplus N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (plus NVAE1 AE2) REST) ENV) /\ true => (IC (push NVAE1 (push (plushl AE2) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (plushl AE2) REST)) ENV) /\ true => (IC (push (plus N AE2) REST) ENV)
INF Parsed rewrite rule: (IC (push (plus N NVAE2) REST) ENV) /\ true => (IC (push NVAE2 (push (plushr N) REST)) ENV)
INF Parsed rewrite rule: (IC (push M (push (plushr N) REST)) ENV) /\ true => (IC (push (plus N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (minus N M) REST) ENV) /\ true => (IC (push (mminus N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (minus NVAE1 AE2) REST) ENV) /\ true => (IC (push NVAE1 (push (minushl AE2) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (minushl AE2) REST)) ENV) /\ true => (IC (push (minus N AE2) REST) ENV)
INF Parsed rewrite rule: (IC (push (minus N NVAE2) REST) ENV) /\ true => (IC (push NVAE2 (push (minushr N) REST)) ENV)
INF Parsed rewrite rule: (IC (push M (push (minushr N) REST)) ENV) /\ true => (IC (push (minus N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (for (var X) NVAE1 NVAE2 S) REST) ENV) /\ true => (IC (push NVAE1 (push (forhl (var X) NVAE2 S) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (forhl (var X) NVAE2 S) REST)) ENV) /\ true => (IC (push (for (var X) N NVAE2 S) REST) ENV)
INF Parsed rewrite rule: (IC (push (for (var X) N NVAE2 S) REST) ENV) /\ true => (IC (push NVAE2 (push (forhr (var X) N S) REST)) ENV)
INF Parsed rewrite rule: (IC (push M (push (forhr (var X) N S) REST)) ENV) /\ true => (IC (push (for (var X) N M S) REST) ENV)
INF Parsed rewrite rule: (IC (push (for (var X) N M S) REST) ENV) /\ (mle N M) => (IC (push (seq (assign (var X) N) S) (push (for (var X) (mplus N 1) M S) REST)) ENV)
INF Parsed rewrite rule: (IC (push (for (var X) N M S) REST) ENV) /\ (bnot (mle N M)) => (IC (push (assign (var X) N) REST) ENV)
INF Parsed rewrite rule: (IC (push (le N M) REST) ENV) /\ true => (IC (push (mle N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (le NVAE1 AE2) REST) ENV) /\ true => (IC (push NVAE1 (push (lehl AE2) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (lehl AE2) REST)) ENV) /\ true => (IC (push (le N AE2) REST) ENV)
INF Parsed rewrite rule: (IC (push (le N NVAE2) REST) ENV) /\ true => (IC (push NVAE2 (push (lehr N) REST)) ENV)
INF Parsed rewrite rule: (IC (push M (push (lehr N) REST)) ENV) /\ true => (IC (push (le N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (uifun N M) REST) ENV) /\ true => (IC (push (muifun N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (uifun NVAE1 AE2) REST) ENV) /\ true => (IC (push NVAE1 (push (uifunhl AE2) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (uifunhl AE2) REST)) ENV) /\ true => (IC (push (uifun N AE2) REST) ENV)
INF Parsed rewrite rule: (IC (push (uifun N NVAE2) REST) ENV) /\ true => (IC (push NVAE2 (push (uifunhr N) REST)) ENV)
INF Parsed rewrite rule: (IC (push M (push (uifunhr N) REST)) ENV) /\ true => (IC (push (uifun N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (less N M) REST) ENV) /\ true => (IC (push (mless N M) REST) ENV)
INF Parsed rewrite rule: (IC (push (less NVAE1 AE2) REST) ENV) /\ true => (IC (push NVAE1 (push (lesshl AE2) REST)) ENV)
INF Parsed rewrite rule: (IC (push N (push (lesshl AE2) REST)) ENV) /\ true => (IC (push (less N AE2) REST) ENV)
INF Parsed rewrite rule: (IC (push (less N NVAE2) REST) ENV) /\ true => (IC (push NVAE2 (push (lesshr N) REST)) ENV)
INF Parsed rewrite rule: (IC (push M (push (lesshr N) REST)) ENV) /\ true => (IC (push (less N M) REST) ENV)
INF Parsed rewrite rule: (IC (push pE1 REST) ENV) /\ true => (IC (push (iE1 (lookup ENV 4) (lookup ENV 2)) REST) ENV)
INF Parsed rewrite rule: (IC (push pS1 REST) ENV) /\ true => (IC REST (update ENV 3 (iS1 (lookup ENV 3) (lookup ENV 4) (lookup ENV 1) (lookup ENV 2))))
INF Parsed rewrite rule: (contextexp (fplus FNV FEXP)) /\ true => (fplus (contextexp FNV) FEXP)
INF Parsed rewrite rule: (fplus (contextexp I) FEXP) /\ true => (contextexp (fplus I FEXP))
INF Parsed rewrite rule: (contextexp (fplus I FNV)) /\ true => (fplus I (contextexp FNV))
INF Parsed rewrite rule: (fplus I (contextexp J)) /\ true => (contextexp (fplus I J))
INF Parsed rewrite rule: (contextexp (fplus I J)) /\ true => (contextexp (mplus I J))
INF Parsed rewrite rule: (contextexp (fnot FNV)) /\ true => (fnot (contextexp FNV))
INF Parsed rewrite rule: (fnot (contextexp B)) /\ true => (contextexp (fnot B))
INF Parsed rewrite rule: (contextexp (fnot B)) /\ true => (contextexp (bnot B))
INF Parsed rewrite rule: (contextexp (fminus FNV FEXP)) /\ true => (fminus (contextexp FNV) FEXP)
INF Parsed rewrite rule: (fminus (contextexp I) FEXP) /\ true => (contextexp (fminus I FEXP))
INF Parsed rewrite rule: (contextexp (fminus I FNV)) /\ true => (fminus I (contextexp FNV))
INF Parsed rewrite rule: (fminus I (contextexp J)) /\ true => (contextexp (fminus I J))
INF Parsed rewrite rule: (contextexp (fminus I J)) /\ true => (contextexp (mminus I J))
INF Parsed rewrite rule: (contextexp (feven FNV)) /\ true => (feven (contextexp FNV))
INF Parsed rewrite rule: (feven (contextexp I)) /\ true => (contextexp (feven I))
INF Parsed rewrite rule: (contextexp (feven I)) /\ true => (contextexp (meven I))
INF Parsed rewrite rule: (contextexp (fless FNV FEXP)) /\ true => (fless (contextexp FNV) FEXP)
INF Parsed rewrite rule: (fless (contextexp I) FEXP) /\ true => (contextexp (fless I FEXP))
INF Parsed rewrite rule: (contextexp (fless I FNV)) /\ true => (fless I (contextexp FNV))
INF Parsed rewrite rule: (fless I (contextexp J)) /\ true => (contextexp (fless I J))
INF Parsed rewrite rule: (contextexp (fless I J)) /\ true => (contextexp (mless I J))
INF Parsed rewrite rule: (contextexp (fle FNV FEXP)) /\ true => (fle (contextexp FNV) FEXP)
INF Parsed rewrite rule: (fle (contextexp I) FEXP) /\ true => (contextexp (fle I FEXP))
INF Parsed rewrite rule: (contextexp (fle I FNV)) /\ true => (fle I (contextexp FNV))
INF Parsed rewrite rule: (fle I (contextexp J)) /\ true => (contextexp (fle I J))
INF Parsed rewrite rule: (contextexp (fle I J)) /\ true => (contextexp (mle I J))
INF Parsed rewrite rule: (contextexp (ftimes FNV FEXP)) /\ true => (ftimes (contextexp FNV) FEXP)
INF Parsed rewrite rule: (ftimes (contextexp I) FEXP) /\ true => (contextexp (ftimes I FEXP))
INF Parsed rewrite rule: (contextexp (ftimes I FNV)) /\ true => (ftimes I (contextexp FNV))
INF Parsed rewrite rule: (ftimes I (contextexp J)) /\ true => (contextexp (ftimes I J))
INF Parsed rewrite rule: (contextexp (ftimes I J)) /\ true => (contextexp (mtimes I J))
INF Parsed rewrite rule: (contextexp (fite FNV FEXP1 FEXP2)) /\ true => (fite (contextexp FNV) FEXP1 FEXP2)
INF Parsed rewrite rule: (fite (contextexp B) FEXP1 FEXP2) /\ true => (contextexp (fite B FEXP1 FEXP2))
INF Parsed rewrite rule: (contextexp (fite true FEXP1 FEXP2)) /\ true => (contextexp FEXP1)
INF Parsed rewrite rule: (contextexp (fite false FEXP1 FEXP2)) /\ true => (contextexp FEXP2)
INF Parsed rewrite rule: (contextexp (fequals FNV FEXP)) /\ true => (fequals (contextexp FNV) FEXP)
INF Parsed rewrite rule: (fequals (contextexp I) FEXP) /\ true => (contextexp (fequals I FEXP))
INF Parsed rewrite rule: (contextexp (fequals I FNV)) /\ true => (fequals I (contextexp FNV))
INF Parsed rewrite rule: (fequals I (contextexp J)) /\ true => (contextexp (fequals I J))
INF Parsed rewrite rule: (contextexp (fequals I J)) /\ true => (contextexp (mequals I J))
INF Parsed rewrite rule: (contextexp (app FNV FEXP)) /\ true => (app (contextexp FNV) FEXP)
INF Parsed rewrite rule: (app (contextexp (lam (fvar X) FEXP1)) FEXP2) /\ true => (contextexp (app (lam (fvar X) FEXP1) FEXP2))
INF Parsed rewrite rule: (contextexp (app (lam (fvar X) FEXP1) FNV)) /\ true => (app (lam (fvar X) FEXP1) (contextexp FNV))
INF Parsed rewrite rule: (app (lam (fvar X) FEXP1) (contextexp VF)) /\ true => (contextexp (app (lam (fvar X) FEXP1) VF))
INF Parsed rewrite rule: (contextexp (app (lam (fvar X) FEXP1) VF)) /\ true => (contextexp (substitute (fvar X) VF FEXP1))
INF Parsed rewrite rule: (contextexp (fdiv FNV FEXP)) /\ true => (fdiv (contextexp FNV) FEXP)
INF Parsed rewrite rule: (fdiv (contextexp I) FEXP) /\ true => (contextexp (fdiv I FEXP))
INF Parsed rewrite rule: (contextexp (fdiv I FNV)) /\ true => (fdiv I (contextexp FNV))
INF Parsed rewrite rule: (fdiv I (contextexp J)) /\ true => (contextexp (fdiv I J))
INF Parsed rewrite rule: (contextexp (fdiv I J)) /\ true => (contextexp (mdiv I J))
INF Parsed rewrite rule: (contextexp (miu (fvar X) FEXP)) /\ true => (contextexp (substitute (fvar X) (miu (fvar X) FEXP) FEXP))
Constrained term (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (fite (fnot (fequals N 1)) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I)))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)) has 0 defined symbols.
Proving simulation circularity #1
Proving simulation circularity (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (fite (fnot (fequals N 1)) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I)))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))
    + prove forall left (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (fite (fnot (fequals N 1)) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I)))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))
        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (fite (fnot (fequals N 1)) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I)))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))
            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (fite (contextexp (fnot (fequals N 1))) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))
                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (fite (fnot (contextexp (fequals N 1))) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))
                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (fite (fnot (contextexp (mequals N 1))) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))
                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (fite (contextexp (fnot (mequals N 1))) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))
                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (fite (contextexp (bnot (mequals N 1))) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))
                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (fite (bnot (mequals N 1)) (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))) I)))) /\ (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))
                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (fite (feven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1)))))) /\ (band (bnot (mequals N 1)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))
                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp I))) /\ (band (mequals N 1) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))
                                    Constrained term (F (contextexp I)) /\ (band (mequals N 1) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))) has 0 defined symbols.
                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (fite (contextexp (feven N)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))
                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (fite (contextexp (meven N)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))
                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (fite (meven N) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1)) (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1)))))) /\ (band (bnot (mequals N 1)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))
                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2)) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1)) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (app (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (contextexp (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fdiv N 2)) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (contextexp (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus (ftimes N 3) 1)) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (contextexp (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fdiv N 2)) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                Constrained term (F (app (app (contextexp (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fdiv N 2)) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (contextexp (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus (ftimes N 3) 1)) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                Constrained term (F (app (app (contextexp (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus (ftimes N 3) 1)) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (contextexp (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fdiv N 2)) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (contextexp (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus (ftimes N 3) 1)) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv N 2))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes N 3) 1))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (contextexp (fdiv N 2))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (contextexp (fplus (ftimes N 3) 1))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (contextexp (mdiv N 2))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (contextexp (ftimes N 3)) 1)) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (mdiv N 2))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (contextexp (mtimes 3 N)) 1)) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (contextexp (fplus (mtimes 3 N) 1))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (contextexp (mplus 1 (mtimes 3 N)))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (app (lam (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (mplus 1 (mtimes 3 N)))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                    Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                    Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                    Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                    + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mplus 1 (mtimes 3 N)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                    Constrained term (F (app (contextexp (substitute (fvar 0) (mplus 1 (mtimes 3 N)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (contextexp (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                        + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mplus 1 (mtimes 3 N)) (lam (fvar 1) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                        Constrained term (F (app (contextexp (substitute (fvar 0) (mplus 1 (mtimes 3 N)) (lam (fvar 1) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (contextexp (mplus 1 I))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (contextexp (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 2)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 2)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (fplus (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (fplus (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 2)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 2)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (fplus (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (fplus (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1)))) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mplus 1 (mtimes 3 N)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mplus 1 (mtimes 3 N)) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                            Constrained term (F (app (contextexp (substitute (fvar 0) (mplus 1 (mtimes 3 N)) (lam (fvar 1) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (bnot (meven N)) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (mplus 1 I))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (contextexp (mplus 1 I))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (contextexp (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 2)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 2)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (fplus (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (fplus (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 2)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 2)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (fplus (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (fplus (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1)))) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fnot (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (contextexp (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (contextexp (app (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1))))) (fplus I 1))))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (fvar 0) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) 1)) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fdiv (fvar 0) 2))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (app (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
                                                                                                                Constrained term (F (app (contextexp (substitute (fvar 0) (mdiv N 2) (lam (fvar 1) (fite (fnot (fequals (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0)) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) 1))) (fite (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (feven (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (fvar 1))))) (fplus I 1))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I)))) has 1 defined symbols.
                                                                                                                + prove exists right (pair (IC (push (while (not (iequals (var 0) 1)) (seq (assign (var 1) (plus (var 1) 1)) (ite (ieven (var 0)) (assign (var 0) (div (var 0) 2)) (assign (var 0) (plus (times (var 0) 3) 1))))) done) ENV) (F (app (contextexp (lam (fvar 1) (substitute (fvar 0) (mdiv N 2) (fite (fnot (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fequals (fvar 0) 1))) (fite (feven (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 0))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1)))) (substitute (fvar 2) (miu (fvar 2) (lam (fvar 0) (lam (fvar 1) (fite (fnot (fequals (fvar 0) 1)) (fite (feven (fvar 0)) (app (app (fvar 2) (fdiv (fvar 0) 2)) (fplus (fvar 1) 1)) (app (app (fvar 2) (fplus (ftimes (fvar 0) 3) 1)) (fplus (fvar 1) 1))) (fvar 1))))) (fvar 1)))))) (fplus I 1)))) /\ (band (bnot (mequals N 1)) (band (meven N) (band (mequals (lookup ENV 0) N) (mequals (lookup ENV 1) I))))
^C