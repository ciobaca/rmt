
D:\facultate\licenta\gitrepo_rmt\rmt\examples>"C:\Users\sburuiana\Documents\Visual Studio 2013\Projects\rmt\Debug\rmt.exe" -v 0  
protect(init(N),X) /\ band(true,bnot(mle(X,mzero))) => protect(loop(mzero,N),mminus(X,mone))
protect(loop(S,N),X) /\ band(mle(mone,N),bnot(mle(X,mzero))) => protect(loop(mplus(S,N),mminus(N,mone)),mminus(X,mone))
protect(loop(S,N),X) /\ band(bnot(mle(mone,N)),bnot(mle(X,mzero))) => protect(done(S),mminus(X,mone))
protect(_0,X) /\ band(true,bnot(mle(X,mzero))) => protect(_0,mminus(X,mone))

Proving circularity #1:
--------
    - protect(init(N),(+ N 1)) if false -----> protect(done((div (* N (+ N 1)) 2)),0)
    - protect(init(N),(+ N 1)) if false =(C)=> protect(done((div (* N (+ N 1)) 2)),0)
        - protect(loop(0,N),(- (+ N 1) 1)) if false -----> protect(done((div (* N (+ N 1)) 2)),0)
        - protect(loop(0,N),(- (+ N 1) 1)) if false =(C)=> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(loop((+ 0 N),(- N 1)),(- (- (+ N 1) 1) 1)) if false -----> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(loop((+ 0 N),(- N 1)),(- (- (+ N 1) 1) 1)) if false =(C)=> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(loop((+ 0 N),(- N 1)),(- (- (+ N 1) 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) =(R)=> protect(done((div (* N (+ N 1)) 2)),0)
        ! Remaining proof obligation:protect(loop((+ 0 N),(- N 1)),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (not (or (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (not (<= (- (- (+ N 1) 1) 1) 0))) (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (and (<= 1 (- N 1)) (not (<= (- (- (+ N 1) 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
        * Assuming that protect(loop((+ 0 N),(- N 1)),(- (- (+ N 1) 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) => protect(done((div (* N (+ N 1)) 2)),0)
            - protect(loop(0,N),(- (- (+ N 1) 1) 1)) if false -----> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(loop(0,N),(- (- (+ N 1) 1) 1)) if false =(C)=> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) =(R)=> protect(done((div (* N (+ N 1)) 2)),0)
        ! Remaining proof obligation:protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (or (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
        * Assuming that protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
        - protect(loop(0,N),(- (+ N 1) 1)) if (and (<= 0 N) (not (<= (+ N 1) 0))) =(R)=> protect(done((div (* N (+ N 1)) 2)),0)
    ! Remaining proof obligation:protect(loop(0,N),(- (+ N 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (or (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
    * Assuming that protect(loop(0,N),(- (+ N 1) 1)) if (and (<= 0 N) (not (<= (+ N 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
        - protect(init(N),(- (+ N 1) 1)) if false -----> protect(done((div (* N (+ N 1)) 2)),0)
        - protect(init(N),(- (+ N 1) 1)) if false =(C)=> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(loop(0,N),(- (- (+ N 1) 1) 1)) if false -----> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(loop(0,N),(- (- (+ N 1) 1) 1)) if false =(C)=> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) =(R)=> protect(done((div (* N (+ N 1)) 2)),0)
        ! Remaining proof obligation:protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (or (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
        * Assuming that protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
            - protect(init(N),(- (- (+ N 1) 1) 1)) if false -----> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(init(N),(- (- (+ N 1) 1) 1)) if false =(C)=> protect(done((div (* N (+ N 1)) 2)),0)
            - protect(init(N),(- (- (+ N 1) 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) =(R)=> protect(done((div (* N (+ N 1)) 2)),0)
        ! Remaining proof obligation:protect(init(N),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))))) => protect(done((div (* N (+ N 1)) 2)),0)
        * Assuming that protect(init(N),(- (- (+ N 1) 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
        - protect(init(N),(- (+ N 1) 1)) if (and (<= 0 N) (not (<= (+ N 1) 0))) =(R)=> protect(done((div (* N (+ N 1)) 2)),0)
    ! Remaining proof obligation:protect(init(N),(- (+ N 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))))) => protect(done((div (* N (+ N 1)) 2)),0)
    * Assuming that protect(init(N),(- (+ N 1) 1)) if (and (<= 0 N) (not (<= (+ N 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
    - protect(init(N),(+ N 1)) if (<= 0 N) =(R)=> protect(done((div (* N (+ N 1)) 2)),0)
* Proved that protect(init(N),(+ N 1)) if (<= 0 N) => protect(done((div (* N (+ N 1)) 2)),0)
--------
Circularity #1 not proved. The following proof obligations failed:
Remaining proof obligation #1 (reason: branching limit exceeded): protect(loop((+ (+ 0 N) (- N 1)),(- (- N 1) 1)),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (and (<= 1 (- N 1)) (not (<= (- (- (+ N 1) 1) 1) 0)))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #2 (reason: branching limit exceeded): protect(loop((+ 0 N),(- N 1)),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #3 (reason: could not prove completeness): protect(loop((+ 0 N),(- N 1)),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (not (or (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (not (<= (- (- (+ N 1) 1) 1) 0))) (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (and (<= 1 (- N 1)) (not (<= (- (- (+ N 1) 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #4 (reason: branching limit exceeded): protect(loop((+ 0 N),(- N 1)),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0)))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #5 (reason: branching limit exceeded): protect(loop(0,N),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #6 (reason: could not prove completeness): protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (or (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #7 (reason: could not prove completeness): protect(loop(0,N),(- (+ N 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (or (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #8 (reason: branching limit exceeded): protect(loop((+ 0 N),(- N 1)),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0)))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #9 (reason: branching limit exceeded): protect(loop(0,N),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #10 (reason: could not prove completeness): protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (or (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #11 (reason: branching limit exceeded): protect(loop(0,N),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #12 (reason: branching limit exceeded): protect(init(N),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #13 (reason: could not prove completeness): protect(init(N),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #14 (reason: could not prove completeness): protect(init(N),(- (+ N 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))))) => protect(done((div (* N (+ N 1)) 2)),0)

Proving circularity #2:
--------
    - protect(loop(S,I),(+ I 1)) if false -----> protect(done((+ S (div (* I (+ I 1)) 2))),0)
    - protect(loop(S,I),(+ I 1)) if false =(C)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
        - protect(loop((+ S I),(- I 1)),(- (+ I 1) 1)) if false -----> protect(done((+ S (div (* I (+ I 1)) 2))),0)
            - protect(done((+ (+ S I) (div (* (- I 1) (+ (- I 1) 1)) 2))),0) if (and (and (and (<= 0 I) (and (<= 1 I) (not (<= (+ I 1) 0)))) (<= 0 (- I 1))) (= (+ (- I 1) 1) (- (+ I 1) 1))) -----> protect(done((+ S (div (* I (+ I 1)) 2))),0)
            - protect(done((+ (+ S I) (div (* (- I 1) (+ (- I 1) 1)) 2))),0) if false =(C)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
            - protect(done((+ (+ S I) (div (* (- I 1) (+ (- I 1) 1)) 2))),0) if false =(R)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
        * Proved that protect(done((+ (+ S I) (div (* (- I 1) (+ (- I 1) 1)) 2))),0) if (and (and (and (<= 0 I) (and (<= 1 I) (not (<= (+ I 1) 0)))) (<= 0 (- I 1))) (= (+ (- I 1) 1) (- (+ I 1) 1))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
        - protect(loop((+ S I),(- I 1)),(- (+ I 1) 1)) if (and (and (<= 0 I) (and (<= 1 I) (not (<= (+ I 1) 0)))) (and (and (and (<= 0 I) (and (<= 1 I) (not (<= (+ I 1) 0)))) (<= 0 (- I 1))) (= (+ (- I 1) 1) (- (+ I 1) 1)))) =(C)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
        - protect(loop((+ S I),(- I 1)),(- (+ I 1) 1)) if (and (and (<= 0 I) (and (<= 1 I) (not (<= (+ I 1) 0)))) (not (and (and (and (<= 0 I) (and (<= 1 I) (not (<= (+ I 1) 0)))) (<= 0 (- I 1))) (= (+ (- I 1) 1) (- (+ I 1) 1))))) =(R)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
    * Proved that protect(loop((+ S I),(- I 1)),(- (+ I 1) 1)) if (and (<= 0 I) (and (<= 1 I) (not (<= (+ I 1) 0)))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
        - protect(done(S),(- (+ I 1) 1)) if (and (<= 0 I) (and (not (<= 1 I)) (not (<= (+ I 1) 0)))) -----> protect(done((+ S (div (* I (+ I 1)) 2))),0)
        - protect(done(S),(- (+ I 1) 1)) if false =(C)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
        - protect(done(S),(- (+ I 1) 1)) if false =(R)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
    * Proved that protect(done(S),(- (+ I 1) 1)) if (and (<= 0 I) (and (not (<= 1 I)) (not (<= (+ I 1) 0)))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
        - protect(loop(S,I),(- (+ I 1) 1)) if false -----> protect(done((+ S (div (* I (+ I 1)) 2))),0)
        - protect(loop(S,I),(- (+ I 1) 1)) if false =(C)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
            - protect(loop((+ S I),(- I 1)),(- (- (+ I 1) 1) 1)) if false -----> protect(done((+ S (div (* I (+ I 1)) 2))),0)
            - protect(loop((+ S I),(- I 1)),(- (- (+ I 1) 1) 1)) if false =(C)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
            - protect(loop((+ S I),(- I 1)),(- (- (+ I 1) 1) 1)) if (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) =(R)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
        ! Remaining proof obligation:protect(loop((+ S I),(- I 1)),(- (- (+ I 1) 1) 1)) if (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) (not (or (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) (not (<= (- (- (+ I 1) 1) 1) 0))) (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) (and (<= 1 (- I 1)) (not (<= (- (- (+ I 1) 1) 1) 0))))))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
        * Assuming that protect(loop((+ S I),(- I 1)),(- (- (+ I 1) 1) 1)) if (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
            - protect(loop(S,I),(- (- (+ I 1) 1) 1)) if false -----> protect(done((+ S (div (* I (+ I 1)) 2))),0)
            - protect(loop(S,I),(- (- (+ I 1) 1) 1)) if false =(C)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
            - protect(loop(S,I),(- (- (+ I 1) 1) 1)) if (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) =(R)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
        ! Remaining proof obligation:protect(loop(S,I),(- (- (+ I 1) 1) 1)) if (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (not (or (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (not (<= (- (- (+ I 1) 1) 1) 0))) (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (and (<= 1 I) (not (<= (- (- (+ I 1) 1) 1) 0))))))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
        * Assuming that protect(loop(S,I),(- (- (+ I 1) 1) 1)) if (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
        - protect(loop(S,I),(- (+ I 1) 1)) if (and (<= 0 I) (not (<= (+ I 1) 0))) =(R)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
    ! Remaining proof obligation:protect(loop(S,I),(- (+ I 1) 1)) if (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (or (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0))))))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
    * Assuming that protect(loop(S,I),(- (+ I 1) 1)) if (and (<= 0 I) (not (<= (+ I 1) 0))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
    - protect(loop(S,I),(+ I 1)) if (<= 0 I) =(R)=> protect(done((+ S (div (* I (+ I 1)) 2))),0)
* Proved that protect(loop(S,I),(+ I 1)) if (<= 0 I) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
--------
Circularity #2 not proved. The following proof obligations failed:
Remaining proof obligation #1 (reason: branching limit exceeded): protect(loop((+ (+ 0 N) (- N 1)),(- (- N 1) 1)),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (and (<= 1 (- N 1)) (not (<= (- (- (+ N 1) 1) 1) 0)))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #2 (reason: branching limit exceeded): protect(loop((+ 0 N),(- N 1)),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #3 (reason: could not prove completeness): protect(loop((+ 0 N),(- N 1)),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (not (or (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (not (<= (- (- (+ N 1) 1) 1) 0))) (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0)))) (and (<= 1 (- N 1)) (not (<= (- (- (+ N 1) 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #4 (reason: branching limit exceeded): protect(loop((+ 0 N),(- N 1)),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0)))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #5 (reason: branching limit exceeded): protect(loop(0,N),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #6 (reason: could not prove completeness): protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (or (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #7 (reason: could not prove completeness): protect(loop(0,N),(- (+ N 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (or (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (and (<= 0 N) (not (<= (+ N 1) 0))) (and (<= 1 N) (not (<= (- (+ N 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #8 (reason: branching limit exceeded): protect(loop((+ 0 N),(- N 1)),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0)))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #9 (reason: branching limit exceeded): protect(loop(0,N),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #10 (reason: could not prove completeness): protect(loop(0,N),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (or (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (and (<= 1 N) (not (<= (- (- (+ N 1) 1) 1) 0))))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #11 (reason: branching limit exceeded): protect(loop(0,N),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #12 (reason: branching limit exceeded): protect(init(N),(- (- (- (+ N 1) 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #13 (reason: could not prove completeness): protect(init(N),(- (- (+ N 1) 1) 1)) if (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (and (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))) (not (<= (- (- (+ N 1) 1) 1) 0))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #14 (reason: could not prove completeness): protect(init(N),(- (+ N 1) 1)) if (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (and (and (<= 0 N) (not (<= (+ N 1) 0))) (not (<= (- (+ N 1) 1) 0))))) => protect(done((div (* N (+ N 1)) 2)),0)
Remaining proof obligation #15 (reason: branching limit exceeded): protect(loop((+ (+ S I) (- I 1)),(- (- I 1) 1)),(- (- (- (+ I 1) 1) 1) 1)) if (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) (and (<= 1 (- I 1)) (not (<= (- (- (+ I 1) 1) 1) 0)))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
Remaining proof obligation #16 (reason: branching limit exceeded): protect(loop((+ S I),(- I 1)),(- (- (- (+ I 1) 1) 1) 1)) if (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) (not (<= (- (- (+ I 1) 1) 1) 0))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
Remaining proof obligation #17 (reason: could not prove completeness): protect(loop((+ S I),(- I 1)),(- (- (+ I 1) 1) 1)) if (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) (not (or (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) (not (<= (- (- (+ I 1) 1) 1) 0))) (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0)))) (and (<= 1 (- I 1)) (not (<= (- (- (+ I 1) 1) 1) 0))))))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
Remaining proof obligation #18 (reason: branching limit exceeded): protect(loop((+ S I),(- I 1)),(- (- (- (+ I 1) 1) 1) 1)) if (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (and (<= 1 I) (not (<= (- (- (+ I 1) 1) 1) 0)))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
Remaining proof obligation #19 (reason: branching limit exceeded): protect(loop(S,I),(- (- (- (+ I 1) 1) 1) 1)) if (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (not (<= (- (- (+ I 1) 1) 1) 0))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
Remaining proof obligation #20 (reason: could not prove completeness): protect(loop(S,I),(- (- (+ I 1) 1) 1)) if (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (not (or (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (not (<= (- (- (+ I 1) 1) 1) 0))) (and (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (and (<= 1 I) (not (<= (- (- (+ I 1) 1) 1) 0))))))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
Remaining proof obligation #21 (reason: could not prove completeness): protect(loop(S,I),(- (+ I 1) 1)) if (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (or (and (and (<= 0 I) (not (<= (+ I 1) 0))) (not (<= (- (+ I 1) 1) 0))) (and (and (<= 0 I) (not (<= (+ I 1) 0))) (and (<= 1 I) (not (<= (- (+ I 1) 1) 0))))))) => protect(done((+ S (div (* I (+ I 1)) 2))),0)
