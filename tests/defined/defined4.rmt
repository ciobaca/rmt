sorts State, ExpF;

subsort Int < ExpF;

signature
  box : Int -> ExpF,
  pair : ExpF ExpF -> State,
  fplus : ExpF ExpF -> ExpF,
  f : ExpF -> ExpF,
  fa : ExpF ExpF -> ExpF,
  fun : Int Int -> ExpF;

variables N:Int, I:Int, S:Int, E : ExpF;

define reduce : Int Int ExpF -> ExpF by
  (reduce N I E) /\ (mle N I) => E,
  (reduce N I E) /\ (bnot (mle N I)) => (reduce N (mplus I 1) (fplus I E));

rewrite-system flanguage
  (f N) /\ (mle N 0) => 0,
  (f N) /\ (bnot (mle N 0)) => (fplus N (f (mminus N 1))),
  (fa I N) /\ (mle N 0) => I,
  (fa I N) /\ (bnot (mle N 0)) => (fa (mplus I N) (mminus N 1)),
  (fplus N I) => (mplus N I);

// smt-unify (fun 2 3) (fun N N);

// !EOF!

defined-simplify (reduce 8 5 S);
defined-simplify (reduce 8 (mplus 5 1) (fplus 5 S));
defined-simplify (reduce 8 (mplus (mplus 5 1) 1) (fplus (mplus 5 1) (fplus 5 S)));
